{"ast":null,"code":"var _jsxFileName = \"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React copy.js/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport Table from './components/Table';\nimport Pagination from './components/Pagination';\nimport { helperPaginate } from './helpers/helperPaginate';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coins: [],\n      count: 25,\n      starts: 0,\n      hasMore: true,\n      counter: 0\n    };\n\n    this.componentDidMount = () => {\n      this.loadCoins();\n      this.loadChart();\n      setInterval(async () => {\n        this.updateCoins();\n      }, 30000);\n    };\n\n    this.loadMore = () => {\n      const _this$state = this.state,\n            starts = _this$state.starts,\n            count = _this$state.count;\n      let hasMoreHelper = true;\n      if (starts >= 75) hasMoreHelper = false;\n      this.setState({\n        starts: starts + count,\n        hasMore: hasMoreHelper\n      });\n      this.loadCoins(); // this.loadChart();\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          count = _this$state2.count,\n          coins = _this$state2.coins,\n          starts = _this$state2.starts,\n          hasMore = _this$state2.hasMore,\n          isReadyLoad = _this$state2.isReadyLoad;\n    return React.createElement(\"div\", {\n      className: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(InfiniteScroll, {\n      next: this.loadMore,\n      hasMore: hasMore,\n      dataLength: coins.length,\n      loader: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Loading...\"), React.createElement(\"div\", {\n        className: \"pagesNum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, starts + count)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Table, {\n      input: coins,\n      tableVisibility: isReadyLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))));\n  }\n\n  async loadCoins() {\n    const _this$state3 = this.state,\n          coins = _this$state3.coins,\n          starts = _this$state3.starts,\n          count = _this$state3.count;\n    const url = \"/info?starts=\".concat(starts, \"&count=\").concat(count);\n\n    try {\n      const response = await fetch(url, {\n        cache: \"no-store\"\n      });\n      const dataJSON = await response.json();\n      console.log(response.status);\n      this.setState({\n        coins: coins.concat(dataJSON)\n      });\n      this.loadChart();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async loadChart() {\n    console.log('loadChart');\n    const _this$state4 = this.state,\n          coins = _this$state4.coins,\n          counter = _this$state4.counter;\n    const url = '/instruments';\n\n    try {\n      const response = await fetch(url);\n      const dataJSON = await response.json();\n\n      if (counter === 0) {\n        this.setState({\n          coins: dataJSON,\n          counter: counter + 1\n        });\n      } else {\n        this.setState({\n          coins: coins.concat(dataJSON),\n          counter: counter + 1\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async updateCoins() {\n    const url = \"/instruments\";\n\n    try {\n      const response = await fetch(url, {\n        cache: \"no-store\"\n      });\n      const dataJSON = await response.json();\n      console.log(response.status);\n      this.setState({\n        coins: dataJSON\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React copy.js/src/App.js"],"names":["React","Component","Table","Pagination","helperPaginate","InfiniteScroll","App","state","coins","count","starts","hasMore","counter","componentDidMount","loadCoins","loadChart","setInterval","updateCoins","loadMore","hasMoreHelper","setState","render","isReadyLoad","length","url","response","fetch","cache","dataJSON","json","console","log","status","concat","error"],"mappings":";AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,SAASC,SAAT,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAA+B,oBAA/B;AACA,OAAUC,UAAV,MAA+B,yBAA/B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AAGA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzCM,KAFyC,GAEjC;AACPC,MAAAA,KAAK,EAAU,EADR;AAEPC,MAAAA,KAAK,EAAU,EAFR;AAGPC,MAAAA,MAAM,EAAS,CAHR;AAIPC,MAAAA,OAAO,EAAQ,IAJR;AAKPC,MAAAA,OAAO,EAAQ;AALR,KAFiC;;AAAA,SAqCzCC,iBArCyC,GAqCrB,MAAM;AAEzB,WAAKC,SAAL;AACA,WAAKC,SAAL;AAEAC,MAAAA,WAAW,CAAC,YAAY;AAEtB,aAAKC,WAAL;AAED,OAJU,EAIR,KAJQ,CAAX;AAKA,KA/CwC;;AAAA,SAkDzCC,QAlDyC,GAkD9B,MAAM;AAAA,0BAEU,KAAKX,KAFf;AAAA,YAERG,MAFQ,eAERA,MAFQ;AAAA,YAEAD,KAFA,eAEAA,KAFA;AAIhB,UAAIU,aAAa,GAAG,IAApB;AACA,UAAKT,MAAM,IAAI,EAAf,EAAoBS,aAAa,GAAG,KAAhB;AAEpB,WAAKC,QAAL,CAAgB;AACfV,QAAAA,MAAM,EAAIA,MAAM,GAAGD,KADJ;AAEfE,QAAAA,OAAO,EAAGQ;AAFK,OAAhB;AAKA,WAAKL,SAAL,GAZgB,CAahB;AACA,KAhEwC;AAAA;;AAWzCO,EAAAA,MAAM,GAAG;AAAA,yBAE+C,KAAKd,KAFpD;AAAA,UAEAE,KAFA,gBAEAA,KAFA;AAAA,UAEOD,KAFP,gBAEOA,KAFP;AAAA,UAEcE,MAFd,gBAEcA,MAFd;AAAA,UAEsBC,OAFtB,gBAEsBA,OAFtB;AAAA,UAE+BW,WAF/B,gBAE+BA,WAF/B;AAIR,WAEC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,oBAAC,cAAD;AACC,MAAA,IAAI,EAAY,KAAKJ,QADtB;AAEC,MAAA,OAAO,EAASP,OAFjB;AAGC,MAAA,UAAU,EAAMH,KAAK,CAACe,MAHvB;AAIC,MAAA,MAAM,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACZ;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADY,EAEZ;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2Bb,MAAM,GAAGD,KAApC,CAFY,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAE,KAAF;AAAS,MAAA,KAAK,EAAKD,KAAnB;AAA2B,MAAA,eAAe,EAAKc,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CATD,CAFD,CAFD;AAoBA;;AA+BD,QAAOR,SAAP,GAAmB;AAAA,yBAEgB,KAAKP,KAFrB;AAAA,UAETC,KAFS,gBAETA,KAFS;AAAA,UAEFE,MAFE,gBAEFA,MAFE;AAAA,UAEMD,KAFN,gBAEMA,KAFN;AAGjB,UAAMe,GAAG,0BAAmBd,MAAnB,oBAAmCD,KAAnC,CAAT;;AACD,QAAI;AAEH,YAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAN,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,MAArB;AAEA,WAAKZ,QAAL,CAAc;AACbZ,QAAAA,KAAK,EAAGA,KAAK,CAACyB,MAAN,CAAaL,QAAb;AADK,OAAd;AAKA,WAAKb,SAAL;AAGA,KAfD,CAeE,OAAOmB,KAAP,EAAc;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA;AACD;;AAED,QAAMnB,SAAN,GAAkB;AAEjBe,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAFiB,yBAIW,KAAKxB,KAJhB;AAAA,UAIRC,KAJQ,gBAIRA,KAJQ;AAAA,UAIAI,OAJA,gBAIAA,OAJA;AAKhB,UAAMY,GAAG,GAAG,cAAZ;;AACD,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAEF,GAAF,CAA5B;AACA,YAAMI,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;;AAEA,UAAKjB,OAAO,KAAK,CAAjB,EAAoB;AACnB,aAAKQ,QAAL,CAAc;AACXZ,UAAAA,KAAK,EAAKoB,QADC;AAEXhB,UAAAA,OAAO,EAAGA,OAAO,GAAG;AAFT,SAAd;AAIA,OALD,MAKO;AACN,aAAKQ,QAAL,CAAc;AACbZ,UAAAA,KAAK,EAAKA,KAAK,CAACyB,MAAN,CAAaL,QAAb,CADG;AAEbhB,UAAAA,OAAO,EAAGA,OAAO,GAAG;AAFP,SAAd;AAIA;AAGD,KAjBD,CAiBE,OAAOsB,KAAP,EAAc;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA;AACD;;AAGD,QAAOjB,WAAP,GAAqB;AAEnB,UAAMO,GAAG,GAAG,cAAZ;;AACD,QAAI;AAEH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAN,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,MAArB;AAEA,WAAKZ,QAAL,CAAc;AACbZ,QAAAA,KAAK,EAAEoB;AADM,OAAd;AAGA,KAVD,CAUE,OAAOM,KAAP,EAAc;AAEfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA;AACD;;AAxIwC","sourcesContent":["import React              from 'react';\nimport { Component }      from 'react';\nimport Table              from './components/Table';\nimport    Pagination      from './components/Pagination';\nimport { helperPaginate } from './helpers/helperPaginate'\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nexport default class App extends Component{\n     \n\tstate = {\n\t\tcoins       :  [],\n\t\tcount       :  25,\n\t\tstarts      :  0,\n\t\thasMore     :  true,\n\t\tcounter     :  0\n\t}\n\t\n\t\n\trender() {\n\t\t\n\t\tconst { count, coins, starts, hasMore, isReadyLoad } = this.state;\n\n\t\treturn (\n\n\t\t\t<div className='wrap'>\n\n\t\t\t\t<InfiniteScroll\n\t\t\t\t\tnext       =  { this.loadMore }\n\t\t\t\t\thasMore    =  { hasMore }\n\t\t\t\t\tdataLength =  { coins.length }\n\t\t\t\t\tloader     =  { <div>\n\t\t\t\t\t\t\t\t\t<h4 className='loading'>Loading...</h4>\n\t\t\t\t\t\t\t\t\t<div className='pagesNum'>{starts + count}</div>\n\t\t\t\t\t\t\t\t</div> }\n\t\t\t\t>\n\t\t\t\t\t<div className='table'>\n\t\t\t\t\t\t< Table  input = { coins } tableVisibility = { isReadyLoad }/>\n\t\t\t\t\t</div>\n\n\t\t\t\t</InfiniteScroll>\n\t\t\t</div>\n\t\t)\n\t}\n\t\n\tcomponentDidMount = () => {\n\n\t\tthis.loadCoins();\n\t\tthis.loadChart();\n\t\t\n\t\tsetInterval(async () => {\n\n\t\t\t this.updateCoins();\n\t\t\t \n\t\t}, 30000);\n\t}\n\t\n\n\tloadMore = () => {\n\n\t\tconst { starts, count } = this.state;\n\n\t\tlet hasMoreHelper = true;\n\t\tif ( starts >= 75 ) hasMoreHelper = false;\n\n\t\tthis.setState( ({\n\t\t\tstarts  : starts + count,\n\t\t\thasMore : hasMoreHelper,\n\t\t}))\n\n\t\tthis.loadCoins();\n\t\t// this.loadChart();\n\t}\n\t\n\tasync  loadCoins() {\n\n\t\t\tconst { coins, starts, count } = this.state;\n\t\t\tconst url = `/info?starts=${starts}&count=${count}`;\n\t\ttry {\n\n\t\t\tconst response = await fetch(url, { cache: \"no-store\" }); \n\t\t\tconst dataJSON = await response.json();\n\t\t\t\n\t\t\tconsole.log(response.status);\n\n\t\t\tthis.setState({\n\t\t\t\tcoins : coins.concat(dataJSON),\n\t\t\t\t\n\t\t\t});\n\n\t\t\tthis.loadChart();\n\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n\tasync loadChart() {\n\n\t\tconsole.log('loadChart');\n\n\t\t\tconst { coins , counter} = this.state;\n\t\t\tconst url = '/instruments';\n\t\ttry {\n\t\t\tconst response = await fetch( url ); \n\t\t\tconst dataJSON = await response.json();\n\n\t\t\tif ( counter === 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcoins   : dataJSON,\n\t\t\t\t\t\t\tcounter : counter + 1\n\t\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcoins   : coins.concat(dataJSON),\n\t\t\t\t\tcounter : counter + 1\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\t\n\n\n\tasync  updateCoins() {\n\n\t\t\tconst url = \"/instruments\";\n\t\ttry {\n\n\t\t\tconst response = await fetch(url, { cache: \"no-store\" });\n\t\t\tconst dataJSON = await response.json();\n\t\t\t\n\t\t\tconsole.log(response.status);\n\n\t\t\tthis.setState({\n\t\t\t\tcoins: dataJSON\n\t\t\t});\n\t\t} catch (error) {\n\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n}\n\n\n"]},"metadata":{},"sourceType":"module"}