{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export function dateTimeConvert(input){var convertTime=input.toString();var day=convertTime.slice(0,10);var time=convertTime.slice(11,19);var result=\"\".concat(day,\" ( \").concat(time,\" )\");return result;};export function toFixedTwo(input){var num=Math.floor(input*100)/100;return num.toFixed(2);};export function numbersAfterHundreds(input){// check this\nif(input===0){return 0;}var arrFromInput=(''+input).split('.');var splitted=' '+arrFromInput[1].slice(2,arrFromInput[1].length);return splitted;};export function splitEveryThreeDigit(input){var arrFromInput=(''+input).split('.');var splitted=arrFromInput[0].split('');var divider=splitted.length%3;var count=0;var countTwo=0;var result='';if(divider===0){count=0;};if(divider===1){count=2;};if(divider===2){count=1;};for(var i=0;i<splitted.length;i++){count++;countTwo++;result+=splitted[i];if(count===3){if(countTwo===splitted.length){break;}else{result+=',';count=0;}};}return result;};export function numberType(input){var splitted=(''+input).split('.');var result='';if(splitted[0].length>9){result=' Bn.';}else if(splitted[0].length>6){result=' mil';}return result;};export function percentageColor(input){if(+input>=0){return'green-text';}return'tomato-text';};export function logoPicture(input){var pic=\" https://s2.coinmarketcap.com/static/img/coins/128x128/\".concat(input,\".png\");return pic;};export function componentDidMount(){return _componentDidMount.apply(this,arguments);}// export function chartDataHelper(input) {\n//       let arrHead = [\n//             ['', 'Price USD']\n//       ];\n//       let priceAndTimeData = [];\n//       const everyNthNum = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);\n//       let nthNumber = 6;\n//       if (input.length < 13) {\n//             nthNumber = 1;\n//       }\n//       everyNthNum( input, nthNumber ).map( (el) => (\n//             priceAndTimeData.push([dateTimeConvert(el.time), el.price])\n//       ));\n//       return  arrHead.concat(priceAndTimeData);\n// };\nfunction _componentDidMount(){_componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this=this;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.update();case 2:case\"end\":return _context.stop();}}},_callee);})),60000);}catch(e){console.log(e);}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return _componentDidMount.apply(this,arguments);}","map":{"version":3,"sources":["/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/src/helpers/helpers.js"],"names":["dateTimeConvert","input","convertTime","toString","day","slice","time","result","toFixedTwo","num","Math","floor","toFixed","numbersAfterHundreds","arrFromInput","split","splitted","length","splitEveryThreeDigit","divider","count","countTwo","i","numberType","percentageColor","logoPicture","pic","componentDidMount","setInterval","update","e","console","log"],"mappings":"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","sourcesContent":["export function dateTimeConvert(input) {\n\n      let convertTime = input.toString();\n\n      let day = convertTime.slice(0, 10);\n      let time = convertTime.slice(11, 19);\n\n      let result = `${day} ( ${time} )`\n\n      return result;\n};\n\nexport function toFixedTwo(input) {\n\n      let num = Math.floor(input * 100) / 100;\n      return num.toFixed(2)\n};\n\nexport function numbersAfterHundreds(input) {\n\n      // check this\n      if ( input === 0 ) {\n            return 0;  \n      }\n\n      let arrFromInput = ('' + input).split('.');\n      let splitted = ' ' + (arrFromInput[1].slice(2, arrFromInput[1].length));\n\n      return splitted;\n};\n\nexport function splitEveryThreeDigit(input) {\n\n      let arrFromInput = ('' + input).split('.');\n      let splitted = arrFromInput[0].split('');\n\n      let divider = splitted.length % 3;\n\n      let count    = 0;\n      let countTwo = 0;\n      let result   = '';\n\n      if (divider === 0) {\n            count = 0\n      };\n      if (divider === 1) {\n            count = 2\n      };\n      if (divider === 2) {\n            count = 1\n      };\n\n      for (let i = 0; i < splitted.length; i++) {\n            count++;\n            countTwo++;\n\n            result += splitted[i];\n\n            if (count === 3) {\n                  if (countTwo === splitted.length) {\n                        break;\n                  } else {\n                        result += ',';\n                        count = 0;\n                  }\n            };\n      }\n      return result;\n};\n\nexport function numberType(input) {\n\n      let splitted = ('' + input).split('.');\n      let result = '';\n\n      if (splitted[0].length > 9) {\n            result = ' Bn.';\n      } else if (splitted[0].length > 6) {\n            result = ' mil';\n      }\n      return result;\n};\n\nexport function percentageColor(input) {\n\n      if (+input >= 0) {\n            return 'green-text';\n      }\n      return 'tomato-text';\n};\n\nexport function logoPicture(input) {\n\n      let pic =` https://s2.coinmarketcap.com/static/img/coins/128x128/${input}.png`;\n      return pic\n};\n\nexport async function componentDidMount () {\n      try {\n            setInterval(async () => {\n       \n                  await this.update()\n                  \n            }, 60000);\n      } catch(e) {\n            console.log(e);\n      }\n}\n\n\n\n\n\n// export function chartDataHelper(input) {\n      \n//       let arrHead = [\n//             ['', 'Price USD']\n//       ];\n\n//       let priceAndTimeData = [];\n\n//       const everyNthNum = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);\n      \n//       let nthNumber = 6;\n\n//       if (input.length < 13) {\n//             nthNumber = 1;\n//       }\n\n//       everyNthNum( input, nthNumber ).map( (el) => (\n            \n//             priceAndTimeData.push([dateTimeConvert(el.time), el.price])\n//       ));\n      \n//       return  arrHead.concat(priceAndTimeData);\n// };"]},"metadata":{},"sourceType":"module"}