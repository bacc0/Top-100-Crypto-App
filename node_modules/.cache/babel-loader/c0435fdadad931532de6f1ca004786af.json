{"ast":null,"code":"var _jsxFileName = \"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/src/components/tableComponents/Chart.jsx\";\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { Chart } from 'react-google-charts';\nimport { chartDataHelper } from '../../helpers/helperChart';\nexport default class LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: [],\n      tableVisibility\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.input !== prevState.input) {\n      return {\n        chartData: nextProps.input\n      };\n    } else return null;\n  }\n\n  render() {\n    const chartData = this.state.chartData;\n    return React.createElement(\"div\", {\n      className: tableVisibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      id: \"chart\",\n      className: \"chart borderBottom white_BG\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: chartDataHelper(chartData),\n      width: '160px',\n      height: '50px',\n      loader: React.createElement(\"div\", {\n        className: \"ultraSmall\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }),\n      chartType: \"LineChart\",\n      options: {\n        backgroundColor: 'none',\n        colors: ['rgb(124, 67, 255)'],\n        lineWidth: 1,\n        axes: {\n          x: {\n            0: {\n              side: 'top'\n            }\n          }\n        },\n        chartArea: {\n          width: '150%',\n          height: '175%'\n        },\n        hAxis: {\n          textPosition: 'none',\n          baselineColor: 'none',\n          ticks: []\n        },\n        vAxis: {\n          textPosition: 'none',\n          baselineColor: 'none',\n          ticks: [],\n          scaleType: 'Linear'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/src/components/tableComponents/Chart.jsx"],"names":["React","Component","Chart","chartDataHelper","LineChart","constructor","props","state","chartData","tableVisibility","getDerivedStateFromProps","nextProps","prevState","input","render","backgroundColor","colors","lineWidth","axes","x","side","chartArea","width","height","hAxis","textPosition","baselineColor","ticks","vAxis","scaleType"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAgC,OAAhC;AACA,SAASC,SAAT,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAgC,qBAAhC;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAIA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACb,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACPC,MAAAA,SAAS,EAAW,EADb;AAEPC,MAAAA;AAFO,KAAb;AAIL;;AAED,SAAOC,wBAAP,CAAiCC,SAAjC,EAA4CC,SAA5C,EAAwD;AAClD,QAAID,SAAS,CAACE,KAAV,KAAoBD,SAAS,CAACC,KAAlC,EAAyC;AAEnC,aAAO;AAAEL,QAAAA,SAAS,EAAEG,SAAS,CAACE;AAAvB,OAAP;AACL,KAHD,MAIK,OAAO,IAAP;AACV;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UAEKN,SAFL,GAEmB,KAAKD,KAFxB,CAEKC,SAFL;AAIH,WACM;AAAK,MAAA,SAAS,EAAIC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAI,MAAA,EAAE,EAAE,OAAR;AAAgB,MAAA,SAAS,EAAC,6BAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,KAAD;AACM,MAAA,IAAI,EAAUN,eAAe,CAACK,SAAD,CADnC;AAEM,MAAA,KAAK,EAAU,OAFrB;AAGM,MAAA,MAAM,EAAQ,MAHpB;AAIM,MAAA,MAAM,EAAQ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJpB;AAKM,MAAA,SAAS,EAAI,WALnB;AAMM,MAAA,OAAO,EAAO;AACRO,QAAAA,eAAe,EAAE,MADT;AAERC,QAAAA,MAAM,EAAE,CAAC,mBAAD,CAFA;AAGRC,QAAAA,SAAS,EAAE,CAHH;AAIRC,QAAAA,IAAI,EAAE;AACAC,UAAAA,CAAC,EAAE;AACG,eAAG;AAAEC,cAAAA,IAAI,EAAE;AAAR;AADN;AADH,SAJE;AASRC,QAAAA,SAAS,EAAE;AACLC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SATH;AAaRC,QAAAA,KAAK,EAAE;AACDC,UAAAA,YAAY,EAAE,MADb;AAEDC,UAAAA,aAAa,EAAE,MAFd;AAGDC,UAAAA,KAAK,EAAE;AAHN,SAbC;AAkBRC,QAAAA,KAAK,EAAE;AACDH,UAAAA,YAAY,EAAE,MADb;AAEDC,UAAAA,aAAa,EAAE,MAFd;AAGDC,UAAAA,KAAK,EAAE,EAHN;AAIDE,UAAAA,SAAS,EAAE;AAJV;AAlBC,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,CADN,CADN;AAsCL;;AA5D0C","sourcesContent":["import * as React          from 'react';\nimport { Component }       from 'react';\nimport { Chart }           from 'react-google-charts';\nimport { chartDataHelper } from '../../helpers/helperChart';\n\n\n\nexport default class LineChart extends Component {\n      constructor(props) {\n            super(props);\n\n            this.state = {\n                  chartData      :    [] ,\n                  tableVisibility\n            }\n      }\n\n      static getDerivedStateFromProps( nextProps, prevState ) {\n            if (nextProps.input !== prevState.input) {\n\n                  return { chartData: nextProps.input };\n            }\n            else return null;\n      }\n\n      render() {\n\n            const { chartData } = this.state;\n\n            return (\n                  <div className = {tableVisibility}>\n                        <td id ='chart' className='chart borderBottom white_BG'>  \n                              <Chart\n                                    data      =  {chartDataHelper(chartData)}\n                                    width     =   {'160px'}\n                                    height    =  {'50px'}\n                                    loader    =  {<div className='ultraSmall'></div>}\n                                    chartType =  'LineChart'\n                                    options   =  {{\n                                          backgroundColor: 'none',\n                                          colors: ['rgb(124, 67, 255)'],\n                                          lineWidth: 1,\n                                          axes: {\n                                                x: {\n                                                      0: { side: 'top' }\n                                                }\n                                          },\n                                          chartArea: {\n                                                width: '150%',\n                                                height: '175%'\n                                          },\n                                          hAxis: {\n                                                textPosition: 'none',\n                                                baselineColor: 'none',\n                                                ticks: []\n                                          },\n                                          vAxis: {\n                                                textPosition: 'none',\n                                                baselineColor: 'none',\n                                                ticks: [],\n                                                scaleType: 'Linear'\n                                          }\n                                    }\n                              }/>\n                        </td>\n                  </div>\n            );\n      }\n}\n"]},"metadata":{},"sourceType":"module"}