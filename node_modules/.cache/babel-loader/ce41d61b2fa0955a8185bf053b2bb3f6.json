{"ast":null,"code":"import _classCallCheck from\"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/node_modules/@babel/runtime/helpers/esm/inherits\";import*as React from'react';import{Component}from'react';import{Chart}from'react-google-charts';import{chartDataHelper}from'../../helpers/helperChart';var LineChart=/*#__PURE__*/function(_Component){_inherits(LineChart,_Component);function LineChart(props){var _this;_classCallCheck(this,LineChart);_this=_possibleConstructorReturn(this,_getPrototypeOf(LineChart).call(this,props));_this.state={chartData:[]};return _this;}_createClass(LineChart,[{key:\"render\",value:function render(){var chartData=this.state.chartData;return React.createElement(\"td\",{id:\"chart\",className:\"chart borderBottom white_BG\"},React.createElement(Chart,{data:chartDataHelper(chartData),width:'120px',height:'40px',loader:React.createElement(\"div\",{className:\"ultraSmall\"},\"Loading...\"),chartType:\"LineChart\",options:{backgroundColor:'none',colors:['rgb(124, 67, 255)'],lineWidth:1,axes:{x:{0:{side:'top'}}},chartArea:{width:'150%',height:'175%'},hAxis:{textPosition:'none',baselineColor:'none',ticks:[]},vAxis:{textPosition:'none',baselineColor:'none',ticks:[],scaleType:'Linear'}}}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){if(nextProps.input!==prevState.input){return{chartData:nextProps.input};}else return null;}}]);return LineChart;}(Component);export{LineChart as default};","map":{"version":3,"sources":["/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/src/components/tableComponents/Chart.jsx"],"names":["React","Component","Chart","chartDataHelper","LineChart","props","state","chartData","backgroundColor","colors","lineWidth","axes","x","side","chartArea","width","height","hAxis","textPosition","baselineColor","ticks","vAxis","scaleType","nextProps","prevState","input"],"mappings":"4vBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAgC,OAAhC,CACA,OAASC,SAAT,KAAgC,OAAhC,CACA,OAASC,KAAT,KAAgC,qBAAhC,CACA,OAASC,eAAT,KAAgC,2BAAhC,C,GAIqBC,CAAAA,S,mEACf,mBAAYC,KAAZ,CAAmB,2CACb,2EAAMA,KAAN,GAEA,MAAKC,KAAL,CAAa,CACPC,SAAS,CAAE,EADJ,CAAb,CAHa,aAMlB,C,6DAUQ,IAEKA,CAAAA,SAFL,CAEmB,KAAKD,KAFxB,CAEKC,SAFL,CAIH,MACM,2BAAI,EAAE,CAAE,OAAR,CAAgB,SAAS,CAAC,6BAA1B,EACM,oBAAC,KAAD,EACM,IAAI,CAAUJ,eAAe,CAACI,SAAD,CADnC,CAEM,KAAK,CAAS,OAFpB,CAGM,MAAM,CAAQ,MAHpB,CAIM,MAAM,CAAQ,2BAAK,SAAS,CAAC,YAAf,eAJpB,CAKM,SAAS,CAAI,WALnB,CAMM,OAAO,CAAO,CACRC,eAAe,CAAE,MADT,CAERC,MAAM,CAAE,CAAC,mBAAD,CAFA,CAGRC,SAAS,CAAE,CAHH,CAIRC,IAAI,CAAE,CACAC,CAAC,CAAE,CACG,EAAG,CAAEC,IAAI,CAAE,KAAR,CADN,CADH,CAJE,CASRC,SAAS,CAAE,CACLC,KAAK,CAAE,MADF,CAELC,MAAM,CAAE,MAFH,CATH,CAaRC,KAAK,CAAE,CACDC,YAAY,CAAE,MADb,CAEDC,aAAa,CAAE,MAFd,CAGDC,KAAK,CAAE,EAHN,CAbC,CAkBRC,KAAK,CAAE,CACDH,YAAY,CAAE,MADb,CAEDC,aAAa,CAAE,MAFd,CAGDC,KAAK,CAAE,EAHN,CAIDE,SAAS,CAAE,QAJV,CAlBC,CANpB,EADN,CADN,CAoCL,C,4EAhDgCC,S,CAAWC,S,CAAY,CAClD,GAAID,SAAS,CAACE,KAAV,GAAoBD,SAAS,CAACC,KAAlC,CAAyC,CAEnC,MAAO,CAAElB,SAAS,CAAEgB,SAAS,CAACE,KAAvB,CAAP,CACL,CAHD,IAIK,OAAO,KAAP,CACV,C,uBAfgCxB,S,SAAlBG,S","sourcesContent":["import * as React          from 'react';\nimport { Component }       from 'react';\nimport { Chart }           from 'react-google-charts';\nimport { chartDataHelper } from '../../helpers/helperChart';\n\n\n\nexport default class LineChart extends Component {\n      constructor(props) {\n            super(props);\n\n            this.state = {\n                  chartData: [] \n            }\n      }\n\n      static getDerivedStateFromProps( nextProps, prevState ) {\n            if (nextProps.input !== prevState.input) {\n\n                  return { chartData: nextProps.input };\n            }\n            else return null;\n      }\n\n      render() {\n\n            const { chartData } = this.state;\n\n            return (\n                  <td id ='chart' className='chart borderBottom white_BG'>  \n                        <Chart\n                              data      =  {chartDataHelper(chartData)}\n                              width     =  {'120px'}\n                              height    =  {'40px'}\n                              loader    =  {<div className='ultraSmall'>Loading...</div>}\n                              chartType =  'LineChart'\n                              options   =  {{\n                                    backgroundColor: 'none',\n                                    colors: ['rgb(124, 67, 255)'],\n                                    lineWidth: 1,\n                                    axes: {\n                                          x: {\n                                                0: { side: 'top' }\n                                          }\n                                    },\n                                    chartArea: {\n                                          width: '150%',\n                                          height: '175%'\n                                    },\n                                    hAxis: {\n                                          textPosition: 'none',\n                                          baselineColor: 'none',\n                                          ticks: []\n                                    },\n                                    vAxis: {\n                                          textPosition: 'none',\n                                          baselineColor: 'none',\n                                          ticks: [],\n                                          scaleType: 'Linear'\n                                    }\n                              }\n                        }/>\n                  </td>\n            );\n      }\n}\n"]},"metadata":{},"sourceType":"module"}