{"ast":null,"code":"// import * as React          from 'react';\n// import { Component }       from 'react';\n// import { Chart }           from 'react-google-charts';\n// import { chartDataHelper } from '../../helpers/helperChart';\n// export default class LineChart extends Component {\n//       constructor(props) {\n//             super(props);\n//             this.state = {\n//                   chartData       : [] ,\n//                   // chartData : props.chartData\n//             }\n//       }\n//       // static getDerivedStateFromProps( nextProps, prevState ) {\n//       //       if (nextProps.chartData !== prevState.chartData) {\n//       //             return { chartData: nextProps.chartData };\n//       //       }\n//       //                         if (nextProps.input !== prevState.input) {\n//       //                               return { chartData: nextProps.input };\n//       //                         }\n//       //       else return null;\n//             static getDerivedStateFromProps( nextProps, prevState ) {\n//                   if (nextProps.input !== prevState.input) {\n//                         return { chartData: nextProps.input };\n//                   }\n//                   else return null;\n//       }\n//       render() {\n//             const { chartData } = this.state;\n//             return (\n//                   <div className='borderBottom'>\n//                         <div >\n//                               <td id ='chart' className='chart white_BG'>  \n//                                     <Chart\n//                                           data      =  {chartDataHelper(chartData)}\n//                                           width     =  {'160px'}\n//                                           height    =  {'52px'}\n//                                           loader    =  {<div className='ultraSmall'></div>}\n//                                           chartType =  'LineChart'\n//                                           options   =  {{\n//                                                 backgroundColor: 'none',\n//                                                 colors: ['rgb(124, 67, 255)'],\n//                                                 lineWidth: 1,\n//                                                 axes: {\n//                                                       x: {\n//                                                             0: { side: 'top' }\n//                                                       }\n//                                                 },\n//                                                 chartArea: {\n//                                                       width: '150%',\n//                                                       height: '175%'\n//                                                 },\n//                                                 hAxis: {\n//                                                       textPosition: 'none',\n//                                                       baselineColor: 'none',\n//                                                       ticks: []\n//                                                 },\n//                                                 vAxis: {\n//                                                       textPosition: 'none',\n//                                                       baselineColor: 'none',\n//                                                       ticks: [],\n//                                                       scaleType: 'Linear'\n//                                                 }\n//                                           }\n//                                     }/>\n//                               </td>\n//                         </div>\n//                   </div>\n//             );\n//       }\n// }","map":{"version":3,"sources":["/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/src/components/tableComponents/Chart.jsx"],"names":[],"mappings":"AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n\n\n\n\n// import * as React          from 'react';\n// import { Component }       from 'react';\n// import { Chart }           from 'react-google-charts';\n// import { chartDataHelper } from '../../helpers/helperChart';\n\n\n\n\n// export default class LineChart extends Component {\n//       constructor(props) {\n//             super(props);\n\n//             this.state = {\n//                   chartData       : [] ,\n//                   // chartData : props.chartData\n//             }\n//       }\n\n//       // static getDerivedStateFromProps( nextProps, prevState ) {\n//       //       if (nextProps.chartData !== prevState.chartData) {\n                  \n//       //             return { chartData: nextProps.chartData };\n//       //       }\n//       //                         if (nextProps.input !== prevState.input) {\n                  \n//       //                               return { chartData: nextProps.input };\n//       //                         }\n            \n//       //       else return null;\n\n//             static getDerivedStateFromProps( nextProps, prevState ) {\n//                   if (nextProps.input !== prevState.input) {\n            \n//                         return { chartData: nextProps.input };\n//                   }\n//                   else return null;\n//       }\n\n//       render() {\n\n//             const { chartData } = this.state;\n\n\n//             return (\n//                   <div className='borderBottom'>\n//                         <div >\n//                               <td id ='chart' className='chart white_BG'>  \n//                                     <Chart\n//                                           data      =  {chartDataHelper(chartData)}\n//                                           width     =  {'160px'}\n//                                           height    =  {'52px'}\n//                                           loader    =  {<div className='ultraSmall'></div>}\n//                                           chartType =  'LineChart'\n//                                           options   =  {{\n//                                                 backgroundColor: 'none',\n//                                                 colors: ['rgb(124, 67, 255)'],\n//                                                 lineWidth: 1,\n//                                                 axes: {\n//                                                       x: {\n//                                                             0: { side: 'top' }\n//                                                       }\n//                                                 },\n//                                                 chartArea: {\n//                                                       width: '150%',\n//                                                       height: '175%'\n//                                                 },\n//                                                 hAxis: {\n//                                                       textPosition: 'none',\n//                                                       baselineColor: 'none',\n//                                                       ticks: []\n//                                                 },\n//                                                 vAxis: {\n//                                                       textPosition: 'none',\n//                                                       baselineColor: 'none',\n//                                                       ticks: [],\n//                                                       scaleType: 'Linear'\n//                                                 }\n//                                           }\n//                                     }/>\n//                               </td>\n//                         </div>\n//                   </div>\n//             );\n//       }\n// }\n"]},"metadata":{},"sourceType":"module"}