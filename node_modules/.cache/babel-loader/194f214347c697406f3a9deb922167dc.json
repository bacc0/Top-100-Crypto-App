{"ast":null,"code":"import { dateTimeConvert } from './helpers';\nexport function chartDataHelper(input) {\n  console.log(input);\n  console.log('input');\n  let arrHead = [['', 'Price USD']]; // if (input === [0] ) { \n  //       arrHead = [\n  //             ['', 'Price USD'],[0,0]\n  //       ];\n  //       return\n  // }\n\n  let priceAndTimeData = [];\n\n  const everyNthNum = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);\n\n  let nthNumber = 6; // 6\n\n  if (input.length < 13) {\n    nthNumber = 1;\n  }\n\n  ;\n  everyNthNum(input, nthNumber).map(el => priceAndTimeData.push([dateTimeConvert(el.time), el.price]));\n  return arrHead.concat(priceAndTimeData);\n}\n;","map":{"version":3,"sources":["/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React copy.js/src/helpers/helperChart.js"],"names":["dateTimeConvert","chartDataHelper","input","console","log","arrHead","priceAndTimeData","everyNthNum","arr","nth","filter","e","i","nthNumber","length","map","el","push","time","price","concat"],"mappings":"AACA,SAASA,eAAT,QAAgC,WAAhC;AAGA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAEjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,MAAIC,OAAO,GAAG,CACR,CAAC,EAAD,EAAK,WAAL,CADQ,CAAd,CAJiC,CAQjC;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,gBAAgB,GAAG,EAAvB;;AAEA,QAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAACE,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAGH,GAAJ,KAAYA,GAAG,GAAG,CAAvC,CAAlC;;AAEA,MAAII,SAAS,GAAG,CAAhB,CApBiC,CAoBd;;AAEnB,MAAIX,KAAK,CAACY,MAAN,GAAe,EAAnB,EAAuB;AAAGD,IAAAA,SAAS,GAAG,CAAZ;AAAgB;;AAAA;AAG1CN,EAAAA,WAAW,CAAEL,KAAF,EAASW,SAAT,CAAX,CAAgCE,GAAhC,CAAsCC,EAAD,IAE/BV,gBAAgB,CAACW,IAAjB,CAAsB,CAACjB,eAAe,CAACgB,EAAE,CAACE,IAAJ,CAAhB,EAA2BF,EAAE,CAACG,KAA9B,CAAtB,CAFN;AAKA,SAAQd,OAAO,CAACe,MAAR,CAAed,gBAAf,CAAR;AACL;AAAA","sourcesContent":["\nimport { dateTimeConvert } from './helpers';\n\n\nexport function chartDataHelper(input) {\n      \n      console.log(input)\n      console.log('input')\n      let arrHead = [\n            ['', 'Price USD']\n      ];\n\n      // if (input === [0] ) { \n            \n      //       arrHead = [\n      //             ['', 'Price USD'],[0,0]\n      //       ];\n      //       return\n      // }\n\n      let priceAndTimeData = [];\n\n      const everyNthNum = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);\n      \n      let nthNumber = 6; // 6\n\n      if (input.length < 13) {  nthNumber = 1; };\n\n\n      everyNthNum( input, nthNumber ).map( (el) => (\n            \n            priceAndTimeData.push([dateTimeConvert(el.time), el.price])\n      ));\n      \n      return  arrHead.concat(priceAndTimeData);\n};"]},"metadata":{},"sourceType":"module"}