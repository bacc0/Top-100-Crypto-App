{"ast":null,"code":"import _classCallCheck from\"/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/node_modules/@babel/runtime/helpers/esm/inherits\";import*as React from'react';import{Component}from'react';import{numbersAfterHundreds,toFixedTwo}from'../../helpers/helpers';var Price=/*#__PURE__*/function(_Component){_inherits(Price,_Component);function Price(props){var _this;_classCallCheck(this,Price);_this=_possibleConstructorReturn(this,_getPrototypeOf(Price).call(this,props));_this.state={price:[]};return _this;}_createClass(Price,[{key:\"render\",value:function render(){var price=this.state.price;console.log(price[0]);return React.createElement(\"td\",{className:\"centerText purple_text bold_text borderBottom white_BG elHover\"},React.createElement(\"span\",{className:\"superSmall grey_text\"},\"$\"),toFixedTwo(price[0].$numberDecimal),React.createElement(\"span\",{className:\"superSmallPrice\"},numbersAfterHundreds(price[0].$numberDecimal)));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){if(nextProps.input!==prevState.input){return{price:nextProps.input};}else return null;}}]);return Price;}(Component);// import * as React   from 'react';\n// import  {Component} from 'react';\n// import { numbersAfterHundreds, toFixedTwo } from '../../helpers/helpers';\n// export default class Price extends Component {\n//      constructor(props){\n//           super(props);\n//           this.state = {\n//               price : [{}]\n//           }\n//      }\n// static getDerivedStateFromProps( nextProps, prevState ) {\n//      if (nextProps.input !== prevState.input) {\n//            return {price: nextProps.input };\n//      }\n//      else return null;\n// }\n//      render() {\n//           const {price } = this.state;\n//           return (\n//                <td className='centerText purple_text bold_text borderBottom white_BG'>\n//                     <span className='superSmall grey_text'>&#36;</span>\n//                          { toFixedTwo(price[price_time.length - 1].price ) }\n//                     <span className='superSmallPrice'>\n//                          { numbersAfterHundreds(price[price.length - 1].price )}\n//                     </span>\n//                </td>\n//           );\n//      }\n// }\n// import * as React   from 'react';\n// import  {Component} from 'react';\n// import { numbersAfterHundreds, toFixedTwo } from '../../helpers/helpers';\n// export default class Price extends Component {\n//      constructor(props){\n//           super(props);\n//           this.state = {\n//                price_time : [{}]\n//           }\n//      }\n// static getDerivedStateFromProps( nextProps, prevState ) {\n//      if (nextProps.input !== prevState.input) {\n//            return { price_time: nextProps.input };\n//      }\n//      else return null;\n// }\n//      render() {\n//           const { price_time } = this.state;\n//           return (\n//                <td className='centerText purple_text bold_text borderBottom white_BG'>\n//                     <span className='superSmall grey_text'>&#36;</span>\n//                          { toFixedTwo( price_time[price_time.length - 1].price  ) }\n//                     <span className='superSmallPrice'>\n//                          { numbersAfterHundreds( price_time[ price_time.length - 1].price )}\n//                     </span>\n//                </td>\n//           );\n//      }\n// }\nexport{Price as default};","map":{"version":3,"sources":["/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/src/components/tableComponents/Price.jsx"],"names":["React","Component","numbersAfterHundreds","toFixedTwo","Price","props","state","price","console","log","$numberDecimal","nextProps","prevState","input"],"mappings":"6uBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAyB,OAAzB,CACA,OAASC,SAAT,KAAyB,OAAzB,CACA,OAASC,oBAAT,CAA+BC,UAA/B,KAAiD,uBAAjD,C,GAGqBC,CAAAA,K,+DAChB,eAAYC,KAAZ,CAAkB,uCACb,uEAAMA,KAAN,GAEA,MAAKC,KAAL,CAAa,CACTC,KAAK,CAAG,EADC,CAAb,CAHa,aAMjB,C,yDAYQ,IAEGA,CAAAA,KAFH,CAEa,KAAKD,KAFlB,CAEGC,KAFH,CAGdC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAC,CAAD,CAAjB,EACU,MACK,2BAAI,SAAS,CAAC,gEAAd,EAEK,4BAAM,SAAS,CAAC,sBAAhB,MAFL,CAIYJ,UAAU,CAACI,KAAK,CAAC,CAAD,CAAL,CAASG,cAAV,CAJtB,CAOK,4BAAM,SAAS,CAAC,iBAAhB,EAEOR,oBAAoB,CAACK,KAAK,CAAC,CAAD,CAAL,CAASG,cAAV,CAF3B,CAPL,CADL,CAiBJ,C,4EA9B2BC,S,CAAWC,S,CAAY,CACnD,GAAID,SAAS,CAACE,KAAV,GAAoBD,SAAS,CAACC,KAAlC,CAAyC,CAEnC,MAAO,CAACN,KAAK,CAAEI,SAAS,CAACE,KAAlB,CAAP,CACL,CAHD,IAIK,OAAO,KAAP,CAET,C,mBAjBkCZ,S,EAgDnC;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;OA5IqBG,K","sourcesContent":["import * as React   from 'react';\nimport  {Component} from 'react';\nimport { numbersAfterHundreds, toFixedTwo } from '../../helpers/helpers';\n\n\nexport default class Price extends Component {\n     constructor(props){\n          super(props);\n\n          this.state = {\n              price : [] \n          }\n     }\n\n\nstatic getDerivedStateFromProps( nextProps, prevState ) {\n     if (nextProps.input !== prevState.input) {\n           \n           return {price: nextProps.input };\n     }\n     else return null;\n\n}\n     \n     render() {\n\n          const {price } = this.state;\nconsole.log(price[0])\n          return ( \n               <td className='centerText purple_text bold_text borderBottom white_BG elHover'>\n\n                    <span className='superSmall grey_text'>&#36;</span>\n\n                         { toFixedTwo(price[0].$numberDecimal) }\n                         {/* { (price[0].$numberDecimal) } */}\n                    \n                    <span className='superSmallPrice'>\n\n                         { numbersAfterHundreds(price[0].$numberDecimal )}\n                         {/* { (price[0].$numberDecimal )} */}\n\n                    </span>\n\n               </td>\n          );\n     }\n}\n\n\n\n\n\n\n// import * as React   from 'react';\n// import  {Component} from 'react';\n// import { numbersAfterHundreds, toFixedTwo } from '../../helpers/helpers';\n\n\n \n\n// export default class Price extends Component {\n//      constructor(props){\n//           super(props);\n\n//           this.state = {\n//               price : [{}]\n//           }\n//      }\n\n// static getDerivedStateFromProps( nextProps, prevState ) {\n//      if (nextProps.input !== prevState.input) {\n           \n//            return {price: nextProps.input };\n//      }\n//      else return null;\n// }\n\n        \n//      render() {\n\n//           const {price } = this.state;\n\n//           return (\n//                <td className='centerText purple_text bold_text borderBottom white_BG'>\n\n//                     <span className='superSmall grey_text'>&#36;</span>\n\n//                          { toFixedTwo(price[price_time.length - 1].price ) }\n                    \n//                     <span className='superSmallPrice'>\n\n//                          { numbersAfterHundreds(price[price.length - 1].price )}\n\n//                     </span>\n\n//                </td>\n//           );\n//      }\n// }\n\n\n// import * as React   from 'react';\n// import  {Component} from 'react';\n// import { numbersAfterHundreds, toFixedTwo } from '../../helpers/helpers';\n\n \n\n// export default class Price extends Component {\n//      constructor(props){\n//           super(props);\n\n//           this.state = {\n//                price_time : [{}]\n//           }\n//      }\n\n// static getDerivedStateFromProps( nextProps, prevState ) {\n//      if (nextProps.input !== prevState.input) {\n           \n//            return { price_time: nextProps.input };\n//      }\n//      else return null;\n// }\n\n        \n//      render() {\n\n//           const { price_time } = this.state;\n\n//           return (\n//                <td className='centerText purple_text bold_text borderBottom white_BG'>\n\n//                     <span className='superSmall grey_text'>&#36;</span>\n\n//                          { toFixedTwo( price_time[price_time.length - 1].price  ) }\n                    \n//                     <span className='superSmallPrice'>\n\n//                          { numbersAfterHundreds( price_time[ price_time.length - 1].price )}\n\n//                     </span>\n\n//                </td>\n//           );\n//      }\n// }"]},"metadata":{},"sourceType":"module"}