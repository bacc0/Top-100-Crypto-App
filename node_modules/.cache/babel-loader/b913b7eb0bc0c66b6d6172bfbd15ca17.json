{"ast":null,"code":"var _jsxFileName = \"/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/src/components/tableComponents/Chart.jsx\";\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { Chart } from 'react-google-charts';\nimport { chartData } from '../../helpers/helpers';\nexport default class LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: props.input\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.input !== prevState.input) {\n      return {\n        chartData: nextProps.input\n      };\n    } else return null;\n  }\n\n  render() {\n    return React.createElement(\"td\", {\n      id: \"chart\",\n      className: \"tdOverride\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: chartData(this.state.chartData),\n      width: '80px',\n      height: '40px',\n      loader: React.createElement(\"div\", {\n        className: \"superSmall\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Loading...\"),\n      chartType: \"LineChart\",\n      options: {\n        backgroundColor: 'none',\n        colors: ['rgb(124, 67, 255)'],\n        lineWidth: 1,\n        axes: {\n          x: {\n            0: {\n              side: 'top'\n            }\n          }\n        },\n        chartArea: {\n          width: '150%',\n          height: '175%'\n        },\n        hAxis: {\n          textPosition: 'none',\n          baselineColor: 'none',\n          ticks: []\n        },\n        vAxis: {\n          textPosition: 'none',\n          baselineColor: 'none',\n          ticks: []\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n} // import * as React          from 'react';\n// import { Component }       from 'react';\n// import { Chart }           from 'react-google-charts';\n// import { chartDataHelper } from '../../helpers/helperChart';\n// export default class LineChart extends Component {\n//       constructor(props) {\n//             super(props);\n//             this.state = {\n//                   chartData       : [] ,\n//                   // chartData : props.chartData\n//             }\n//       }\n//       // static getDerivedStateFromProps( nextProps, prevState ) {\n//       //       if (nextProps.chartData !== prevState.chartData) {\n//       //             return { chartData: nextProps.chartData };\n//       //       }\n//       //                         if (nextProps.input !== prevState.input) {\n//       //                               return { chartData: nextProps.input };\n//       //                         }\n//       //       else return null;\n//             static getDerivedStateFromProps( nextProps, prevState ) {\n//                   if (nextProps.input !== prevState.input) {\n//                         return { chartData: nextProps.input };\n//                   }\n//                   else return null;\n//       }\n//       render() {\n//             const { chartData } = this.state;\n//             return (\n//                   <div className='borderBottom'>\n//                         <div >\n//                               <td id ='chart' className='chart white_BG'>  \n//                                     <Chart\n//                                           data      =  {chartDataHelper(chartData)}\n//                                           width     =  {'160px'}\n//                                           height    =  {'52px'}\n//                                           loader    =  {<div className='ultraSmall'></div>}\n//                                           chartType =  'LineChart'\n//                                           options   =  {{\n//                                                 backgroundColor: 'none',\n//                                                 colors: ['rgb(124, 67, 255)'],\n//                                                 lineWidth: 1,\n//                                                 axes: {\n//                                                       x: {\n//                                                             0: { side: 'top' }\n//                                                       }\n//                                                 },\n//                                                 chartArea: {\n//                                                       width: '150%',\n//                                                       height: '175%'\n//                                                 },\n//                                                 hAxis: {\n//                                                       textPosition: 'none',\n//                                                       baselineColor: 'none',\n//                                                       ticks: []\n//                                                 },\n//                                                 vAxis: {\n//                                                       textPosition: 'none',\n//                                                       baselineColor: 'none',\n//                                                       ticks: [],\n//                                                       scaleType: 'Linear'\n//                                                 }\n//                                           }\n//                                     }/>\n//                               </td>\n//                         </div>\n//                   </div>\n//             );\n//       }\n// }","map":{"version":3,"sources":["/Users/bacco/Desktop/FINAL/Top-100-Crypto-App-React FINAL-ONE.js/src/components/tableComponents/Chart.jsx"],"names":["React","Component","Chart","chartData","LineChart","constructor","props","state","input","getDerivedStateFromProps","nextProps","prevState","render","backgroundColor","colors","lineWidth","axes","x","side","chartArea","width","height","hAxis","textPosition","baselineColor","ticks","vAxis"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,QAA0B,qBAA1B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACb,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACPJ,MAAAA,SAAS,EAAEG,KAAK,CAACE;AADV,KAAb;AAGL;;AAED,SAAOC,wBAAP,CAAiCC,SAAjC,EAA4CC,SAA5C,EAAwD;AAClD,QAAID,SAAS,CAACF,KAAV,KAAoBG,SAAS,CAACH,KAAlC,EAAyC;AAEnC,aAAO;AAAEL,QAAAA,SAAS,EAAEO,SAAS,CAACF;AAAvB,OAAP;AACL,KAHD,MAIK,OAAO,IAAP;AACV;;AAEDI,EAAAA,MAAM,GAAG;AAEH,WACM;AAAI,MAAA,EAAE,EAAC,OAAP;AAAe,MAAA,SAAS,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,KAAD;AACM,MAAA,IAAI,EAAET,SAAS,CAAC,KAAKI,KAAL,CAAWJ,SAAZ,CADrB;AAEM,MAAA,KAAK,EAAE,MAFb;AAGM,MAAA,MAAM,EAAE,MAHd;AAIM,MAAA,MAAM,EAAE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJd;AAKM,MAAA,SAAS,EAAC,WALhB;AAMM,MAAA,OAAO,EAAE;AACHU,QAAAA,eAAe,EAAE,MADd;AAEHC,QAAAA,MAAM,EAAE,CAAC,mBAAD,CAFL;AAGHC,QAAAA,SAAS,EAAE,CAHR;AAIHC,QAAAA,IAAI,EAAE;AACAC,UAAAA,CAAC,EAAE;AACG,eAAG;AAAEC,cAAAA,IAAI,EAAE;AAAR;AADN;AADH,SAJH;AASHC,QAAAA,SAAS,EAAE;AACLC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SATR;AAaHC,QAAAA,KAAK,EAAE;AACDC,UAAAA,YAAY,EAAE,MADb;AAEDC,UAAAA,aAAa,EAAE,MAFd;AAGDC,UAAAA,KAAK,EAAE;AAHN,SAbJ;AAkBHC,QAAAA,KAAK,EAAE;AACDH,UAAAA,YAAY,EAAE,MADb;AAEDC,UAAAA,aAAa,EAAE,MAFd;AAGDC,UAAAA,KAAK,EAAE;AAHN;AAlBJ,OANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,CADN;AAmCL;;AAtD0C,C,CA6DjD;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as React    from 'react';\nimport { Component } from 'react';\nimport { Chart }     from 'react-google-charts';\nimport { chartData}  from '../../helpers/helpers';\n\nexport default class LineChart extends Component {\n      constructor(props) {\n            super(props);\n\n            this.state = {\n                  chartData: props.input\n            }\n      }\n\n      static getDerivedStateFromProps( nextProps, prevState ) {\n            if (nextProps.input !== prevState.input) {\n\n                  return { chartData: nextProps.input };\n            }\n            else return null;\n      }\n\n      render() {\n\n            return (\n                  <td id='chart' className='tdOverride'>  \n                        <Chart\n                              data={chartData(this.state.chartData)}\n                              width={'80px'}\n                              height={'40px'}\n                              loader={<div className='superSmall'>Loading...</div>}\n                              chartType='LineChart'\n                              options={{\n                                    backgroundColor: 'none',\n                                    colors: ['rgb(124, 67, 255)'],\n                                    lineWidth: 1,\n                                    axes: {\n                                          x: {\n                                                0: { side: 'top' }\n                                          }\n                                    },\n                                    chartArea: {\n                                          width: '150%',\n                                          height: '175%'\n                                    },\n                                    hAxis: {\n                                          textPosition: 'none',\n                                          baselineColor: 'none',\n                                          ticks: []\n                                    },\n                                    vAxis: {\n                                          textPosition: 'none',\n                                          baselineColor: 'none',\n                                          ticks: []\n                                    }\n                              }\n                        }/>\n                  </td>\n            );\n      }\n}\n\n\n\n\n\n// import * as React          from 'react';\n// import { Component }       from 'react';\n// import { Chart }           from 'react-google-charts';\n// import { chartDataHelper } from '../../helpers/helperChart';\n\n\n\n\n// export default class LineChart extends Component {\n//       constructor(props) {\n//             super(props);\n\n//             this.state = {\n//                   chartData       : [] ,\n//                   // chartData : props.chartData\n//             }\n//       }\n\n//       // static getDerivedStateFromProps( nextProps, prevState ) {\n//       //       if (nextProps.chartData !== prevState.chartData) {\n                  \n//       //             return { chartData: nextProps.chartData };\n//       //       }\n//       //                         if (nextProps.input !== prevState.input) {\n                  \n//       //                               return { chartData: nextProps.input };\n//       //                         }\n            \n//       //       else return null;\n\n//             static getDerivedStateFromProps( nextProps, prevState ) {\n//                   if (nextProps.input !== prevState.input) {\n            \n//                         return { chartData: nextProps.input };\n//                   }\n//                   else return null;\n//       }\n\n//       render() {\n\n//             const { chartData } = this.state;\n\n\n//             return (\n//                   <div className='borderBottom'>\n//                         <div >\n//                               <td id ='chart' className='chart white_BG'>  \n//                                     <Chart\n//                                           data      =  {chartDataHelper(chartData)}\n//                                           width     =  {'160px'}\n//                                           height    =  {'52px'}\n//                                           loader    =  {<div className='ultraSmall'></div>}\n//                                           chartType =  'LineChart'\n//                                           options   =  {{\n//                                                 backgroundColor: 'none',\n//                                                 colors: ['rgb(124, 67, 255)'],\n//                                                 lineWidth: 1,\n//                                                 axes: {\n//                                                       x: {\n//                                                             0: { side: 'top' }\n//                                                       }\n//                                                 },\n//                                                 chartArea: {\n//                                                       width: '150%',\n//                                                       height: '175%'\n//                                                 },\n//                                                 hAxis: {\n//                                                       textPosition: 'none',\n//                                                       baselineColor: 'none',\n//                                                       ticks: []\n//                                                 },\n//                                                 vAxis: {\n//                                                       textPosition: 'none',\n//                                                       baselineColor: 'none',\n//                                                       ticks: [],\n//                                                       scaleType: 'Linear'\n//                                                 }\n//                                           }\n//                                     }/>\n//                               </td>\n//                         </div>\n//                   </div>\n//             );\n//       }\n// }\n"]},"metadata":{},"sourceType":"module"}