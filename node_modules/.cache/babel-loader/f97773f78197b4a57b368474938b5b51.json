{"ast":null,"code":"var _jsxFileName = \"/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport Table from './components/Table';\nimport Pagination from './components/Pagination';\nimport { helperPaginate } from './helpers/helperPaginate';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coins: [],\n      count: 25,\n      starts: 0,\n      hasMore: true\n    };\n\n    this.loadMore = () => {\n      const _this$state = this.state,\n            starts = _this$state.starts,\n            count = _this$state.count;\n      let hasMoreHelper = true;\n      if (starts >= 75) hasMoreHelper = false;\n      this.setState({\n        starts: starts + count,\n        hasMore: hasMoreHelper\n      });\n      this.loadCoins();\n    };\n\n    this.loadChart = () => {\n      const _this$state2 = this.state,\n            coins = _this$state2.coins,\n            starts = _this$state2.starts,\n            count = _this$state2.count;\n      const url = \"/chart?starts=\".concat(starts, \"&count=\").concat(count);\n\n      try {\n        const response = fetch(url, {\n          cache: \"no-store\"\n        });\n        const dataJSON = response.json();\n        console.log(response.status);\n        this.setState({\n          coins: coins.concat(dataJSON)\n        }); // setInterval(() => {\n        // }, 1000);\n\n        this.loadChart();\n      } catch (error) {\n        console.log(error);\n      }\n\n      console.log('hellp');\n    };\n  }\n\n  render() {\n    let a = document.querySelectorAll(\".btn\");\n    return React.createElement(\"div\", {\n      className: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(InfiniteScroll, {\n      next: this.loadMore,\n      loader: React.createElement(\"h4\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Loading...\"),\n      hasMore: this.state.hasMore,\n      dataLength: this.state.coins.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Table, {\n      input: this.state.coins,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        fontSize: 20\n      },\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.starts)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n  componentDidMount() {\n    this.loadCoins();\n    setInterval(async () => {\n      this.updateCoins();\n    }, 30000);\n  }\n\n  async loadCoins() {\n    const _this$state3 = this.state,\n          coins = _this$state3.coins,\n          starts = _this$state3.starts,\n          count = _this$state3.count;\n    const url = \"/info?starts=\".concat(starts, \"&count=\").concat(count);\n\n    try {\n      const response = await fetch(url, {\n        cache: \"no-store\"\n      });\n      const dataJSON = await response.json();\n      console.log(response.status);\n      this.setState({\n        coins: coins.concat(dataJSON)\n      }); // setInterval(() => {\n      // }, 1000);\n\n      this.loadChart();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async updateCoins() {\n    const url = \"/instruments\";\n\n    try {\n      const response = await fetch(url, {\n        cache: \"no-store\"\n      });\n      const dataJSON = await response.json();\n      console.log(response.status);\n      this.setState({\n        coins: dataJSON\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/bacco/Desktop/App-Top-100-Crypto/Top-100-Crypto-App-React.js/src/App.js"],"names":["React","Component","Table","Pagination","helperPaginate","InfiniteScroll","App","state","coins","count","starts","hasMore","loadMore","hasMoreHelper","setState","loadCoins","loadChart","url","response","fetch","cache","dataJSON","json","console","log","status","concat","error","render","a","document","querySelectorAll","length","color","fontSize","componentDidMount","setInterval","updateCoins"],"mappings":"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","sourcesContent":["import React              from 'react';\nimport { Component }      from 'react';\nimport Table              from './components/Table';\nimport    Pagination      from './components/Pagination';\nimport { helperPaginate } from './helpers/helperPaginate'\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nexport default class App extends Component{\n     \n\tstate = {\n\t\tcoins     :  [],\n\t\tcount     :  25,\n\t\tstarts    :  0,\n\t\thasMore   :  true\n\t}\n\t\n\t\n\trender() {\n\t\t\n\t\tlet a = document.querySelectorAll(\".btn\")\n\t\t\n\t\treturn (\n\t\t\t<div className='wrap'>\n\t\t\t\t<InfiniteScroll\n\t\t\t\t\tnext       = { this.loadMore }\n\t\t\t\t\tloader     = { <h4 className='loading'>Loading...</h4> }\n\t\t\t\t\thasMore    = { this.state.hasMore }\n\t\t\t\t\tdataLength = { this.state.coins.length }\n\t\t\t\t>\n\t\t\t\t\t\n\n\t\t\t\t\t<div className='table'>\n\t\t\t\t\t\n\t\t\t\t\t\t< Table  input = { this.state.coins }/>\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t\t\t\t</InfiniteScroll>\n\t\t\t\t\t\t\t{/* <span>------------</span> */}\n\t\t\t\t\t\t\t{/* <span className='btn' onMouseEnter={this.loadMore} >Button</span> */}\n\t\t\t\t\t\t     {/* <span>------------</span> */}\n\t\t\t\t\t\t\t<div style={{ color: \"red\", fontSize: 20 }} className=\"loading\">\n\t\t\t\t\t\t\t<span className='border'>{this.state.starts}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div></div>\n\t\t</div>\n\t\t)\n\t}\n\t\n\tcomponentDidMount() {\n\n\t\tthis.loadCoins();\n\n\t\tsetInterval(async () => {\n\n\t\t\t this.updateCoins();\n\t\t\t \n\t\t}, 30000);\n\t}\n\t\n\n\tloadMore = () => {\n\t\tconst { starts, count } = this.state;\n\n\t\tlet hasMoreHelper = true;\n\t\tif ( starts >= 75 ) hasMoreHelper = false;\n\n\t\tthis.setState( ({\n\t\t\tstarts  : starts + count,\n\t\t\thasMore : hasMoreHelper\n\t\t}))\n\t\tthis.loadCoins();\n\t}\n\n\tloadChart = () => {\n\t\tconst { coins, starts, count } = this.state;\n\t\tconst url = `/chart?starts=${starts}&count=${count}`;\n\ttry {\n\n\t\tconst response = fetch(url, { cache: \"no-store\" }); \n\t\tconst dataJSON = response.json();\n\t\t\n\t\tconsole.log(response.status);\n\n\t\tthis.setState({\n\t\t\tcoins : coins.concat(dataJSON)\n\t\t});\n\n\t\t// setInterval(() => {\n\t\t\t\n\t\t// }, 1000);\n\n\t\tthis.loadChart();\n\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n\n\t\tconsole.log('hellp')\n\t}\n\n\n\tasync  loadCoins() {\n\n\t\t\tconst { coins, starts, count } = this.state;\n\t\t\tconst url = `/info?starts=${starts}&count=${count}`;\n\t\ttry {\n\n\t\t\tconst response = await fetch(url, { cache: \"no-store\" }); \n\t\t\tconst dataJSON = await response.json();\n\t\t\t\n\t\t\tconsole.log(response.status);\n\n\t\t\tthis.setState({\n\t\t\t\tcoins : coins.concat(dataJSON)\n\t\t\t});\n\n\t\t\t// setInterval(() => {\n\t\t\t\t\n\t\t\t// }, 1000);\n\n\t\t\tthis.loadChart();\n\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n\n\tasync  updateCoins() {\n\n\t\t\tconst url = \"/instruments\";\n\t\ttry {\n\n\t\t\tconst response = await fetch(url, { cache: \"no-store\" });\n\t\t\tconst dataJSON = await response.json();\n\t\t\t\n\t\t\tconsole.log(response.status);\n\n\t\t\tthis.setState({\n\t\t\t\tcoins: dataJSON\n\t\t\t});\n\n\t\t} catch (error) {\n\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n}\n\n\n"]},"metadata":{},"sourceType":"module"}